LINE ADDR CONTENTS SOURCE LINE
  1.              	.equ	@, $000
  2.              	.equ stack, $040
  3.  000 020040  	lds#	stack
  4.  001 030000  	ldf# 0
  5.  002 082008  	psh	main_base
  6.  003 082009  	psh	main_exp
  7.  004 412020  	jsr	power	;jump to jsr pushes pc into stack
  8.              	
  9.  005 120002  	ads#	2	;pops 2 things off the stack
 10.  006 04200A  	sta	answer
 11.  007 FFFFFF  	hlt
 12.              
 13.  008 000003  main_base:	.word 3
 14.  009 000004  main_exp:	.word 4
 15.  00A 000000  answer:	.word
 16.              
 17.              ; power subroutine
 18.              	.equ	@,$020
 19.              	.equ base, 3	;offsets of the frame pointer
 20.              	.equ exp, 2
 21.  020 FFF012  power:	pshf		;saves frame pointer in the stack
 22.  021 FFF008  	tsf
 23.  022 000001  	lda#	1
 24.  023 04202F  	sta	temp
 25.              
 26.  024 003002  loop:	lda !exp
 27.  025 200000  	cma#	0
 28.  026 4C202C  	jle	end
 29.  027 00202F  	lda	temp
 30.  028 183003  	mul !base	;Take the offeset and add to the base
 31.  029 04202F  	sta	temp
 32.  02A 1C3002  	dec !exp
 33.  02B 402024  	jmp	loop
 34.  02C 00202F  end:	lda	temp
 35.  02D FFF015  	popf		;gets rid of frame pointer in stack
 36.  02E FFF040  	rtn		;PC gets return address and control goes to call
 37.              
 38.  02F 000000  temp:	.word

                     SYMBOL TABLE CONTENTS

00000A = ANSWER          000003 = BASE            00002C = END             
000002 = EXP             000024 = LOOP            000008 = MAIN_BASE       
000009 = MAIN_EXP        000020 = POWER           000040 = STACK           
00002F = TEMP            